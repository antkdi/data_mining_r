area[,1:26] <- 0 # area = 0
category<-cbind(area, job)
Mpremium_fix_job<- cbind(premium_fix_1, category)
Mpremium_fix_job$display<-apply(Mpremium_fix_job[,-c(1,2)], 1, sum)
Mpremium_fix_job$class <- 24 # M_paid_premium_fix_area
colnames(Mpremium_fix_job)[1:2] <- c("cnt", "list")
Mpremium_fix_total<-rbind(Mpremium_fix_area, Mpremium_fix_job)
premium_fix_total <-rbind(PCpremium_fix_total, Mpremium_fix_total)
# top ---------------------------------------------------------------------
### PC_paid_top_area
top_1 <- top[,c(4,7)]
area <- top[,21:46]
job <- top[,47:59]
job[,1:13] <- 0 # job = 0
category<-cbind(area, job)
top_area<- cbind(top_1, category)
top_area$display<-apply(top_area[,-c(1,2)], 1, sum)
top_area$class <- 25 # PC_paid_top_area
colnames(top_area)[1:2] <- c("cnt", "list")
### PC_paid_top_job
top_1 <- top[,c(5,8)]
area <- top[,21:46]
job <- top[,47:59]
area[,1:26] <- 0 # area = 0
category<-cbind(area, job)
top_job<- cbind(top_1, category)
top_job$display<-apply(top_job[,-c(1,2)], 1, sum)
top_job$class <- 26 # PC_paid_top_job
colnames(top_job)[1:2] <- c("cnt", "list")
PCtop_total<-rbind(top_area, top_job)
### M_paid_top_area
top_1 <- top[,c(12,15)]
area <- top[,21:46]
job <- top[,47:59]
job[,1:13] <- 0 # job = 0
category<-cbind(area, job)
Mtop_area<- cbind(top_1, category)
Mtop_area$display<-apply(Mtop_area[,-c(1,2)], 1, sum)
Mtop_area$class <- 27 # M_paid_top_area
colnames(Mtop_area)[1:2] <- c("cnt", "list")
### M_paid_top_job
top_1 <- top[,c(13,16)]
area <- top[,21:46]
job <- top[,47:59]
area[,1:26] <- 0 # area = 0
category<-cbind(area, job)
Mtop_job<- cbind(top_1, category)
Mtop_job$display<-apply(Mtop_job[,-c(1,2)], 1, sum)
Mtop_job$class <- 28 # M_paid_top_area
colnames(Mtop_job)[1:2] <- c("cnt", "list")
Mtop_total<-rbind(Mtop_area, Mtop_job)
top_total <-rbind(PCtop_total, Mtop_total)
# all_data_rbind & item dummy----------------------------------------------
final_sub <-rbind(plus_total, focus_total, focus_fix_total, premium_total, premium_alpha_total, premium_fix_total, top_total)
final_sub$class<-as.factor(final_sub$class)
final
final <- cbind(final_sub, dummy(final_sub$class))
library(dummies)
final <- cbind(final_sub, dummy(final_sub$class))
final <- final %>% select(-class)
View(final)
final
final <- cbind(final_sub, dummy(final_sub$class))
final[,-class]
final[,-"class"]
final[,-"class"]
final[,-"class"]$class
final[,-final$class]
ggplot(iris, aes(x=Species, y=Sepal.Length)) +
geom_boxplot() +
theme_bw()
ggplot(iris, aes(x=Species, y=Sepal.Width)) +
geom_boxplot() +
theme_bw()
ggplot(iris, aes(x=Species, y=Petal.Length)) +
geom_boxplot() +
theme_bw()
ggplot(iris, aes(x=Species, y=Petal.Width)) +
geom_boxplot() +
theme_bw()
# draw boxplot using loop -------------------------------------------------
y.names <- names(iris)[1:4]
y.names
for (y.name in y.names) {
p <- ggplot(iris, aes(x=Species, y=y.name)) +
geom_boxplot() +
theme_bw() +
ggtitle(paste('Box plot for', y.names))
print(p)
}
# use 'aes_string'
for (y.name in y.names) {
p <- ggplot(iris, aes_string(x='Species', y=y.name)) +
geom_boxplot() +
theme_bw() +
ggtitle(paste('Box plot for', y.names))
print(p)
}
aes_string
y.names
# use 'aes_string'
for (y.name in y.names) {
p <- ggplot(iris, aes_string(x='Species', y=y.name)) +
geom_boxplot() +
theme_bw() +
ggtitle(paste('Box plot for', y.names))
print(p)
}
# use 'aes_string'
for (y.name in y.names) {
p <- ggplot(iris, aes_string(x='Species', y=y.name)) +
geom_boxplot() +
theme_bw() +
ggtitle(paste('Box plot for', y.names))
print(p)
}
# use 'aes_string'
for (y.name in y.names) {
p <- ggplot(iris, aes_string(x='Species', y=y.name)) +
geom_boxplot() +
theme_bw() +
ggtitle(paste('Box plot for', y.name))
print(p)
}
library(MASS)
library(ggplot2)
library(GGally)
install.packages(GGally)
install.packages('GGally')
library(GGally)
mammals
str(mammals)
ggplot(mammals, aes(x=body, y=brain)) +
geom_point()
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point()
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw()
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=0, vjust=0, angle=-45, alpha=.4)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=1, vjust=0, angle=-45, alpha=.4)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=1, vjust=-1, angle=-45, alpha=.4)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=1, vjust=1, angle=-45, alpha=.4)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=5, vjust=1, angle=-45, alpha=.4)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=-1, vjust=1, angle=-45, alpha=.4)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=-1, vjust=1, angle=-45, alpha=.9)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=-1, vjust=1, angle=-45, alpha=1)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=-1, vjust=1, angle=-45, alpha=2)
ggplot(mammals, aes(x=log10(body), y=log10(brain), label=rownames(mammals))) +
geom_point() +
theme_bw() +
geom_text(hjust=-1, vjust=1, angle=-45, alpha=0.1)
with
cor(mammals$body, mammals$brain)
with(mammals, cor(body, brain))
ggpairs(iris[, 1:4])
with(iris, cor(Sepal.Legnth, Sepal$Width))
with(iris, cor(Sepal.Legnth, Sepal.Width))
with(iris, cor(Sepal.Length, Sepal.Width))
a<-ggpairs(iris[, 1:4])
a
str(a)
hist (iris$Species)
hist (iris$Sepal.Length)
hist (iris$Sepal.Length, xlim="a",ylim="b")
hist (iris$Sepal.Length, xlim='a',ylim='b')
hist (iris$Sepal.Length, xlim=(b),ylim=(a))
hist (iris$Sepal.Length, xlab='a',ylab='b')
hist (iris$Sepal.Length, main="histogram name" xlab='xname', ylab='yname')
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname')
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname', xlim=(0,20), ylim=(0,20))
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname', xlim=(20), ylim=(20))
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname', xlim=c(0,20), ylim=c(0,20))
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname', xlim=c(0,10), ylim=c(0,10))
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname', breaks=c(0,5,10,15,20))
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname', breaks=c(0,5,10,15,200))
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname',xlim=c(0,10), ylim=c(0,10), density=20)
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname',xlim=c(0,10), ylim=c(0,10), density=10)
hist (iris$Sepal.Length, main="histogram name", xlab='xname', ylab='yname',xlim=c(0,10), ylim=c(0,10))
with(iris, cor(Sepal.Length, Sepal.Width))
str(a)
ggpairs(iris, 1:4, colour = 'Species')
ggpairs(iris, 1:4, color = 'Species')
r <- hist(sqrt(islands), breaks = c(4*0:5, 10*3:5, 70, 100, 140),
col = "blue1")
text(r$mids, r$density, r$counts, adj = c(.5, -.5), col = "blue3")
r <- hist(sqrt(islands), breaks = c(5, 10, 15, 20, 25),
col = "blue1")
text(r$mids, r$density, r$counts, adj = c(.5, -.5), col = "blue3")
r <- hist(sqrt(islands), breaks = c(5, 10, 15, 20, 200),
col = "blue1")
text(r$mids, r$density, r$counts, adj = c(.5, -.5), col = "blue3")
r <- hist(sqrt(islands), breaks = c(5, 10, 15, 20, 400),
col = "blue1")
text(r$mids, r$density, r$counts, adj = c(.5, -.5), col = "blue3")
r <- hist(sqrt(islands), breaks = c(50, 100, 150, 200, 400),
col = "blue1")
text(r$mids, r$density, r$counts, adj = c(.5, -.5), col = "blue3")
r <- hist(sqrt(islands), nclass=10, col = "blue1")
r <- hist(sqrt(islands), nclass=10, col = "blue1")
text(r$mids, r$density, r$counts, adj = c(.5, -.5), col = "blue3")
r <- hist(sqrt(islands), nclass=15, col = "blue1")
text(r$mids, r$density, r$counts, adj = c(.5, -.5), col = "blue3")
r <- hist(sqrt(islands), nclass=15, col = "blue1")
r <- hist(sqrt(islands), nclass=20, col = "blue1")
r <- hist(sqrt(islands), nclass=15, col = "blue1")
m <- ggplot(movies, aes(x = votes))
m
m + geom_histogram() + scale_x_log10()
r <- hist(sqrt(islands),breaks=seq(0,100,10), col = "blue1")
r <- hist(sqrt(islands),breaks=seq(0,1000,100), col = "blue1")
r <- hist(sqrt(islands),breaks=seq(0,1000,200), col = "blue1")
r <- hist(sqrt(islands),breaks=seq(0,1000,100), col = "blue1")
r <- hist(sqrt(islands),breaks=seq(0,200,50), col = "blue1")
r <- hist(sqrt(islands),breaks=seq(0,200,30), col = "blue1")
r <- hist(sqrt(islands),breaks=seq(0,200,20), col = "blue1")
r <- hist(islands,breaks=seq(0,200,20), col = "blue1")
r <- hist(islands,breaks=seq(0,1000,20), col = "blue1")
r <- hist(islands,breaks=seq(0,2000,20), col = "blue1")
r <- hist(islands,breaks=seq(0,4000,20), col = "blue1")
r <- hist(islands,breaks=seq(0,9000,20), col = "blue1")
hist(iris$Sepal.Length)
hist(iris$Sepal.Length, breaks=seq(1,10,2))
hist(iris$Sepal.Length, breaks=seq(2,10,2))
hist(iris$Sepal.Length, breaks=seq(2,20,2))
hist(iris$Sepal.Length, breaks=seq(2,20,4))
hist(iris$Sepal.Length, breaks=seq(1,20,))
hist(iris$Sepal.Length, breaks=seq(1,20,5))
hist(iris$Sepal.Length, breaks=seq(1,20,1))
hist(iris$Sepal.Length, breaks=seq(1,10,1))
hist(iris$Sepal.Length, breaks=seq(1,10,5))
hist(iris$Sepal.Length, breaks=seq(1,20,5))
hist(iris$Sepal.Length, breaks=seq(1,15,5))
x <- c(1,3,4)
class()
class(x)
class(x)
x <- as.vector(c(1,3,4))
class(x)
class(x)
x <- c(1,3,4)
class(x)
x
names(x) <- c("a","b","c")
x
class(x)
x[1]
x[[1]]
x[-1]
x[-2]
x["a"]
x$
x$a
names(x)
names(x)[1]
names(x)[-1]
test <- read.table("c:/User/user/Desktop/test.txt")
test <- read.table("C:/Users/user/Desktop/test.txt")
View(test)
test <- tbl_df(read.table("C:/Users/user/Desktop/test.txt"))
library(dplyr)
test <- tbl_df(read.table("C:/Users/user/Desktop/test.txt"))
test
test$start_hour[1]*test$calss[1]
test$calss[1]
test$start_hour[1]*test$class[1]
(test$start_hour[1]+test$class[1])*test$rollup_cnt[1]
((test$start_hour[1]+test$class[1])*test$rollup_cnt[1])/24
length(test$rollup_cnt[1])
length(test$rollup_cnt)
test$rollup_cnt
test$rollup_cnt[1]
test$num
length(test$num)
test$start_hour[1]+test$class[1]
test$h_10<-test$start_hour[1]+test$class[1]
test$h_10+test$class[1]
test$h_10[1]+test$class[1]
test$h_10[1]<-test$start_hour[1]+test$class[1]
test$h_10[1]<-test$start_hour[1]+test$class[1]
test$h_10
test
library(dplyr)
test <- tbl_df(read.table("C:/Users/user/Desktop/test.txt"))
test$h_10[1]<-test$start_hour[1]+test$class[1]
test
test$h_10[1]+test$class[1]
test$h_12[1]<-test$h_10[1]+test$class[1]
test
test$rollup_cnt
for (i in 1:10){
test$h_10[i]<-test$start_hour[i]+test$class[i]
test$h_12[i]<-test$h_10[i]+test$class[i]
}
test
for (i in 1:10){
test$h[i]<-test$start_hour[i]+test$class[i]
test$h[i]<-test$h_10[i]+test$class[i]
}
test
test <- tbl_df(read.table("C:/Users/user/Desktop/test.txt"))
for (i in 1:12){
test$h1[i]<-test$start_hour[i]+test$class[i]
test$h2[i]<-test$h1[i]+test$class[i]
test$h3[i]<-test$h2[i]+test$class[i]
test$h4[i]<-test$h3[i]+test$class[i]
test$h5[i]<-test$h4[i]+test$class[i]
test$h6[i]<-test$h5[i]+test$class[i]
test$h7[i]<-test$h6[i]+test$class[i]
test$h8[i]<-test$h7[i]+test$class[i]
test$h9[i]<-test$h8[i]+test$class[i]
test$h10[i]<-test$h9[i]+test$class[i]
test$h11[i]<-test$h10[i]+test$class[i]
test$h12[i]<-test$h11[i]+test$class[i]
}
test
for (i in 1:10){
test$h1[i]<-test$start_hour[i]+test$class[i]
test$h2[i]<-test$h1[i]+test$class[i]
test$h3[i]<-test$h2[i]+test$class[i]
test$h4[i]<-test$h3[i]+test$class[i]
test$h5[i]<-test$h4[i]+test$class[i]
test$h6[i]<-test$h5[i]+test$class[i]
test$h7[i]<-test$h6[i]+test$class[i]
test$h8[i]<-test$h7[i]+test$class[i]
test$h9[i]<-test$h8[i]+test$class[i]
test$h10[i]<-test$h9[i]+test$class[i]
test$h11[i]<-test$h10[i]+test$class[i]
test$h12[i]<-test$h11[i]+test$class[i]
}
test
test[,-3]
test[,-3][[]]
test[,-3][]
test[,-3][]>24
test[,-3]>24
test[,-3]-24
((test[,-3]>24)==T)
(test[,-3]>24)
(test[,-3]>24)-24
(test[,-3]>24)
a<-(test[,-3]>24)
a
a[]==T
a[]==F
test[,-3]>24
ifelse(test[,-3] > 24, test[,-3]-24,test[,-3])
test
h[i][]>24
i
h[i]
test$h[i][]>24
test$h[i][]
test$h[i]
i
test$h[i][1]
cumsum(test$rollup_cnt)
cumsum(test$rollup_cnt)
count(cumsum(test$rollup_cnt))
count(test$rollup_cnt))
count(test$rollup_cnt)
test1<-test$start_hour[i]+test$class[i]
test1
test1<-test$start_hour[1]+test$class[1]
test1
test1<-sum(test$start_hour[1],test$class[1])
test1
test1<-cumsum(test$start_hour,test$class)
test1<-cumsum(test$start_hour[1],test$class[1])
test1<-aggregate(test$start_hour[1],test$class[1])
test1<-aggregate(start_hour[1],class[1],test,function(x) cumsum(x))
test1<-aggregate(test$start_hour[1],test$class[1],test,function(x) cumsum(x))
test1<-aggregate(test$start_hour[1],test$class[1], test, function(x) cumsum(x))
library(stats)
test1<-aggregate(test$start_hour[1],test$class[1], test, function(x) cumsum(x))
stats()
test1<-aggregate(test$start_hour[1]~ test$class[1], test, function(x) cumsum(x))
test1
test1<-aggregate(test$start_hour~ test$class, test, function(x) cumsum(x))
test1
test1<-aggregate(test$class~ test$start_hour, test, function(x) cumsum(x))
test1
test
x <- 1:10
embed (x, 3)
embed (x, 3)
rowSums(embed (x, 3),-2)
rowSums(embed (x, 3))
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
rowSums(x); colSums(x); rowMeans(x); colMeans(x)
rowSums(x)
x <- cbind(x1=test$start_hour[1],x2 = 3 )
x
rowSums(x)
x <- cbind(x1=test$start_hour[1],x2 = 3+)
rowSums(x)
rowSums(x,dims=2)
rowSums(x,dims=1)
rowSums(x,dims=3)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
.rowSums
.rowSums(x,3,2)
.rowSums(x,1,1)
.rowSums(x,1,2)
.rowSums(x,1,3)
.rowSums(x,2,3)
x
.rowSums(x,1,3)
.rowSums(x,1,4)
.rowSums(x,5,4)
.rowSums(x,5,1)
.rowSums(x,5,2)
.rowSums(x,5,3)
x <- 1
.rowSums(x,5,3)
x <- 2
.rowSums(x,5,3)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
.rowSums(x,5,3)
.rowSums(x,5,3)
for (i in 1:10){
.rowSums(x,5,3)
.rowSums(x,5,3)
}
.rowSums(x,5,3)
x
.rowSums(x,5,2)
.rowSums(x,5,1)
dim(UCBAdmissions)
UCBAdmissions
rowSums(UCBAdmissions
rowSums(UCBAdmissions)
rowSums(UCBAdmissions)
rowSums(UCBAdmissions)
rowSums(UCBAdmissions, dims = 2)
x <- cbind(x1 = 3 + 2i, x2 = c(4:1, 2:5) - 5i)
x
x[3, ] <- NA; x[4, 2] <- NA
x
x
rowSums(x)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
apply(x,1,cumsum)
x
apply(x,1,sum)
apply(x,1,rowsum)
rowsum(x)
rowsum(x,group=row)
apply(x,1,cumsum)
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
x$x1
x <-data.frame(cbind(x1 = 3, x2 = c(4:1, 2:5)))
x
sum(x$x1,cumsum(x$x2))
cumsum(x$x2)
seq(1:4)
seq(3,7,1)
seq(3,7,2)
seq(3,prod(x$x1,x$x2),2)
x
seq(3,prod(x$x1[1],x$x2[1]),2)
x$x1[1]
x$x2[1]
seq(3,prod(x$x1[1],x$x2[1]),4)
seq(3,prod(x$x1[1],x$x2[1]),1)
seq(3,prod(x$x1[1],x$x2[1]),1,length.out = 10)
seq(3,prod(x$x1[1],x$x2[1]),1,length.out = 1)
seq(3,prod(x$x1[1],x$x2[1]),1,length.out = 8)
length.out
seq(3,9,2)
seq(3,30,2)
rep(seq(3,30,2),10)
rep(seq(3,30,2),1)
rep(seq(3,30,2),length.out=1)
rep(seq(3,30,2),length.out=5)
seq(3,30,2,length.out=3)
seq(3,30,2)
length(seq(3,30,2))
length(seq(3,300,2))
seq(3,30,length.out = 3,2)
rep(seq(3,30,2),length.out=5)
length(seq(3,300,2))
